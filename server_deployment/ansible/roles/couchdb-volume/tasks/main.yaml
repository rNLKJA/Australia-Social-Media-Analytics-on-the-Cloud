---
# Install 'xfsprogs' package which provides tools to manage XFS file systems.
- name: Install XFS file system tools
  become: yes
  apt:
    name: ['xfsprogs']
    state: latest
    update_cache: yes

# Create an XFS file system on the device specified in the 'volume' variable if it doesn't exist.
- name: Create XFS file system on specified device
  become: yes
  filesystem:
    fstype: xfs
    dev: "{{ item.device }}"
  with_items: "{{ volume }}"
  when: ansible_devices[item.device.split('/')[-1]].partitions == {}

# Check if the directories specified as mount points in the 'volume' variable exist.
- name: Check if the specified mount point directories exist
  become: yes
  stat:
    path: "{{ item.mountpoint }}"
  register: directory_stats
  with_items: "{{ volume }}"

# Create the directories specified in the 'volume' variable if they do not exist.
- name: Create mount point directories if they do not exist
  become: yes
  file:
    path: "{{ item.item.mountpoint }}"
    state: directory
  when: item.stat.exists == false
  with_items: "{{ directory_stats.results }}"

# Add fstab entries for the mounts
- name: Add fstab entries for the mounts
  become: yes
  lineinfile:
    path: /etc/fstab
    line: "{{ item.device }} {{ item.mountpoint }} xfs defaults 0 0"
    state: present
  with_items: "{{ volume }}"

# Mount the device specified in the 'volume' variable at the corresponding mount point if not already mounted.
- name: Mount the specified device at the corresponding mount point
  become: yes
  mount:
    path: "{{ item.mountpoint }}"
    src: "{{ item.device }}"
    fstype: xfs
    opts: defaults
    state: mounted
  with_items: "{{ volume }}"
  when: ansible_mounts | selectattr('mount', 'equalto', item.mountpoint) | list | count == 0
