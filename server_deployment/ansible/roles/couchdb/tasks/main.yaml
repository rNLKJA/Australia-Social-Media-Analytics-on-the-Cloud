---
# Create a directory for the CouchDB Docker container
- name: Set up CouchDB directory
  tags: 'couchdb'
  become: yes
  file:
    path: "{{ db_dir }}" # The directory to be created
    owner: "{{ ansible_user }}" # The name of the user who should own the directory
    group: "{{ ansible_user }}" # The name of the group who should own the directory
    recurse: yes # Specifies whether or not to create all directories leading up to the specified path
    state: directory # The desired state of the path (directory in this case)

# Create a Docker Compose configuration file using a Jinja2 template
- name: Generate Docker Compose configuration
  tags: 'couchdb'
  become: yes
  template:
    src: docker-compose.yaml.j2 # The source Jinja2 template
    dest: "{{ db_dir }}/docker-compose.yaml" # The destination of the file to be created
    owner: "{{ ansible_user }}" # The name of the user who should own the file
    group: "{{ ansible_user }}" # The name of the group who should own the file

# Start the Docker Compose project based on the configuration file created in the previous task
- name: Deploy CouchDB using Docker Compose
  tags: 'couchdb'
  become: yes
  docker_compose:
    project_src: "{{ db_dir }}" # The directory containing the Docker Compose file
    pull: yes # Specifies that Docker should attempt to pull a newer version of the image
    state: present # Specifies that the services defined in the Docker Compose file should be running
    remove_orphans: yes # Specifies that services not defined in the Docker Compose file should be removed
    recreate: always # Specifies that the services should be recreated regardless of their current state

# Change the permissions for the directory where the CouchDB data volume is mounted
- name: Set permissions for CouchDB volume
  tags: 'couchdb'
  become: yes
  file:
    path: "{{ item.mountpoint }}" # The path to the directory where the volume is mounted
    recurse: yes # Specifies that the mode should be applied to all files and directories within the path
    mode: '0777' # The desired permissions
  with_items:
    - "{{ volume }}" # The list of volumes for which to set permissions
